// Code generated by protoc-gen-go.
// source: cs.proto
// DO NOT EDIT!

/*
Package cs is a generated protocol buffer package.

It is generated from these files:
	cs.proto

It has these top-level messages:
	C2S_Login
	S2C_Login
	C2S_HeartBeat
	S2C_HeartBeat
	C2S_Chat
	S2C_Chat
*/
package lei_protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ID int32

const (
	ID_ID_C2S_Login     ID = 10000
	ID_ID_S2C_Login     ID = 10001
	ID_ID_C2S_HeartBeat ID = 10002
	ID_ID_S2C_HeartBeat ID = 10003
	ID_ID_C2S_Chat      ID = 10004
	ID_ID_S2C_Chat      ID = 10005
)

var ID_name = map[int32]string{
	10000: "ID_C2S_Login",
	10001: "ID_S2C_Login",
	10002: "ID_C2S_HeartBeat",
	10003: "ID_S2C_HeartBeat",
	10004: "ID_C2S_Chat",
	10005: "ID_S2C_Chat",
}
var ID_value = map[string]int32{
	"ID_C2S_Login":     10000,
	"ID_S2C_Login":     10001,
	"ID_C2S_HeartBeat": 10002,
	"ID_S2C_HeartBeat": 10003,
	"ID_C2S_Chat":      10004,
	"ID_S2C_Chat":      10005,
}

func (x ID) Enum() *ID {
	p := new(ID)
	*p = x
	return p
}
func (x ID) String() string {
	return proto.EnumName(ID_name, int32(x))
}
func (x *ID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ID_value, data, "ID")
	if err != nil {
		return err
	}
	*x = ID(value)
	return nil
}
func (ID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type RET int32

const (
	RET_RET_OK    RET = 0
	RET_RET_ERROR RET = 1
)

var RET_name = map[int32]string{
	0: "RET_OK",
	1: "RET_ERROR",
}
var RET_value = map[string]int32{
	"RET_OK":    0,
	"RET_ERROR": 1,
}

func (x RET) Enum() *RET {
	p := new(RET)
	*p = x
	return p
}
func (x RET) String() string {
	return proto.EnumName(RET_name, int32(x))
}
func (x *RET) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RET_value, data, "RET")
	if err != nil {
		return err
	}
	*x = RET(value)
	return nil
}
func (RET) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type C2S_Login struct {
	Id               *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *C2S_Login) Reset()                    { *m = C2S_Login{} }
func (m *C2S_Login) String() string            { return proto.CompactTextString(m) }
func (*C2S_Login) ProtoMessage()               {}
func (*C2S_Login) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *C2S_Login) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type S2C_Login struct {
	Ret              *uint32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *S2C_Login) Reset()                    { *m = S2C_Login{} }
func (m *S2C_Login) String() string            { return proto.CompactTextString(m) }
func (*S2C_Login) ProtoMessage()               {}
func (*S2C_Login) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *S2C_Login) GetRet() uint32 {
	if m != nil && m.Ret != nil {
		return *m.Ret
	}
	return 0
}

type C2S_HeartBeat struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *C2S_HeartBeat) Reset()                    { *m = C2S_HeartBeat{} }
func (m *C2S_HeartBeat) String() string            { return proto.CompactTextString(m) }
func (*C2S_HeartBeat) ProtoMessage()               {}
func (*C2S_HeartBeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type S2C_HeartBeat struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *S2C_HeartBeat) Reset()                    { *m = S2C_HeartBeat{} }
func (m *S2C_HeartBeat) String() string            { return proto.CompactTextString(m) }
func (*S2C_HeartBeat) ProtoMessage()               {}
func (*S2C_HeartBeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type C2S_Chat struct {
	Type             *uint32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	FromId           *uint32 `protobuf:"varint,2,req,name=from_id" json:"from_id,omitempty"`
	ToId             *uint32 `protobuf:"varint,3,req,name=to_id" json:"to_id,omitempty"`
	Msg              *string `protobuf:"bytes,4,req,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *C2S_Chat) Reset()                    { *m = C2S_Chat{} }
func (m *C2S_Chat) String() string            { return proto.CompactTextString(m) }
func (*C2S_Chat) ProtoMessage()               {}
func (*C2S_Chat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *C2S_Chat) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *C2S_Chat) GetFromId() uint32 {
	if m != nil && m.FromId != nil {
		return *m.FromId
	}
	return 0
}

func (m *C2S_Chat) GetToId() uint32 {
	if m != nil && m.ToId != nil {
		return *m.ToId
	}
	return 0
}

func (m *C2S_Chat) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type S2C_Chat struct {
	Type             *uint32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	FromId           *uint32 `protobuf:"varint,2,req,name=from_id" json:"from_id,omitempty"`
	ToId             *uint32 `protobuf:"varint,3,req,name=to_id" json:"to_id,omitempty"`
	Msg              *string `protobuf:"bytes,4,req,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *S2C_Chat) Reset()                    { *m = S2C_Chat{} }
func (m *S2C_Chat) String() string            { return proto.CompactTextString(m) }
func (*S2C_Chat) ProtoMessage()               {}
func (*S2C_Chat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *S2C_Chat) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *S2C_Chat) GetFromId() uint32 {
	if m != nil && m.FromId != nil {
		return *m.FromId
	}
	return 0
}

func (m *S2C_Chat) GetToId() uint32 {
	if m != nil && m.ToId != nil {
		return *m.ToId
	}
	return 0
}

func (m *S2C_Chat) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*C2S_Login)(nil), "cs.C2S_Login")
	proto.RegisterType((*S2C_Login)(nil), "cs.S2C_Login")
	proto.RegisterType((*C2S_HeartBeat)(nil), "cs.C2S_HeartBeat")
	proto.RegisterType((*S2C_HeartBeat)(nil), "cs.S2C_HeartBeat")
	proto.RegisterType((*C2S_Chat)(nil), "cs.C2S_Chat")
	proto.RegisterType((*S2C_Chat)(nil), "cs.S2C_Chat")
	proto.RegisterEnum("cs.ID", ID_name, ID_value)
	proto.RegisterEnum("cs.RET", RET_name, RET_value)
}

func init() { proto.RegisterFile("cs.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x48, 0x2e, 0xd6, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4a, 0x2e, 0x56, 0x12, 0xe7, 0xe2, 0x74, 0x36, 0x0a, 0x8e,
	0xf7, 0xc9, 0x4f, 0xcf, 0xcc, 0x13, 0xe2, 0xe2, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd2,
	0xe0, 0x55, 0x92, 0xe0, 0xe2, 0x0c, 0x36, 0x72, 0x86, 0x4a, 0x70, 0x73, 0x31, 0x17, 0xa5, 0x96,
	0x40, 0x65, 0xf8, 0xb9, 0x78, 0x41, 0x5a, 0x3c, 0x52, 0x13, 0x8b, 0x4a, 0x9c, 0x52, 0x13, 0x4b,
	0x40, 0x02, 0x20, 0xa5, 0x08, 0x01, 0x57, 0x2e, 0x0e, 0x90, 0x0a, 0xe7, 0x8c, 0xc4, 0x12, 0x21,
	0x1e, 0x2e, 0x96, 0x92, 0xca, 0x82, 0x54, 0x88, 0x5e, 0x21, 0x7e, 0x2e, 0xf6, 0xb4, 0xa2, 0xfc,
	0xdc, 0x78, 0xa0, 0x35, 0x4c, 0x60, 0x01, 0x5e, 0x2e, 0xd6, 0x92, 0x7c, 0x10, 0x97, 0x19, 0xcc,
	0x05, 0x5a, 0x94, 0x5b, 0x9c, 0x2e, 0xc1, 0x02, 0xe4, 0x70, 0x82, 0x8c, 0x01, 0x99, 0x4b, 0xa1,
	0x31, 0x5a, 0x35, 0x5c, 0x4c, 0x9e, 0x2e, 0x42, 0x82, 0x5c, 0x3c, 0x9e, 0x2e, 0xf1, 0x70, 0xbf,
	0x0a, 0x4c, 0xf0, 0x83, 0x0a, 0xc1, 0x7d, 0x29, 0x30, 0xd1, 0x4f, 0x48, 0x94, 0x4b, 0x00, 0xaa,
	0x0a, 0xee, 0x1b, 0x81, 0x49, 0x30, 0x61, 0x14, 0x4f, 0x0a, 0x4c, 0xf6, 0x13, 0x12, 0xe0, 0xe2,
	0x86, 0xaa, 0x06, 0xb9, 0x51, 0x60, 0x0a, 0x4c, 0x04, 0xe6, 0x6a, 0x81, 0xa9, 0x7e, 0x5a, 0x0a,
	0x5c, 0xcc, 0x41, 0xae, 0x21, 0xc0, 0xa0, 0x65, 0x03, 0x52, 0xf1, 0xfe, 0xde, 0x02, 0x0c, 0x40,
	0xc7, 0x72, 0x82, 0xd8, 0xae, 0x41, 0x41, 0xfe, 0x41, 0x02, 0x8c, 0x80, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x1c, 0xc0, 0xca, 0xd6, 0x91, 0x01, 0x00, 0x00,
}
